// Generated by CoffeeScript 2.5.1
(function() {
  var assert, cargoOptionToHttpOption, http, https, pkg, sleep, toSQLDateString;

  pkg = require("../package.json");

  assert = require("assert");

  http = require('http');

  https = require('https');

  toSQLDateString = function(date) {
    //debuglog "[toSQLDateString] date:", date
    return date.getUTCFullYear() + '-' + ('00' + (date.getUTCMonth() + 1)).slice(-2) + '-' + ('00' + date.getUTCDate()).slice(-2) + ' ' + ('00' + date.getUTCHours()).slice(-2) + ':' + ('00' + date.getUTCMinutes()).slice(-2) + ':' + ('00' + date.getUTCSeconds()).slice(-2);
  };

  cargoOptionToHttpOption = function(cargoOption, mixin) {
    var options;
    options = {
      //protocol : if cargoOption.vehicle is https then 'https:' else 'http:'
      host: cargoOption.host,
      port: cargoOption.port,
      headers: {
        'X-ClickHouse-User': cargoOption.user,
        'X-ClickHouse-Key': cargoOption.password || '',
        //'X-ClickHouse-Format'  : 'JSONCompactEachRow'
        'User-Agent': `${pkg.name}/${pkg.version}`
      }
    };
    return Object.assign(mixin || {}, options);
  };

  sleep = function(seconds) {
    console.log(`sleep ${seconds} seconds`);
    assert(Number.isInteger(seconds) && seconds > 0);
    return new Promise((resolve) => {
      return setTimeout(resolve, seconds * 1000);
    });
  };

  module.exports = {
    toSQLDateString: toSQLDateString,
    cargoOptionToHttpOption: cargoOptionToHttpOption,
    sleep: sleep
  };

}).call(this);
